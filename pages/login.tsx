// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/host";

import { ScreenVariantProvider } from "../components/plasmic/bolao/PlasmicGlobalVariant__Screen";
import { PlasmicLogin } from "../components/plasmic/bolao/PlasmicLogin";
import { useRouter } from "next/router";

import { useSnapshot } from "valtio";
import { state } from "../state-management/app";
import { Supabase } from "../components/supabase";

function Login() {
  const router = useRouter();
  const snap = useSnapshot(state);
  const [failed, setFailed] = React.useState(false);
  const [username, setUser] = React.useState("");
  const [password, setPassword] = React.useState("");

  const onSignin = async () => {
    if (!username || !password) {
      setFailed(true);
      return ;
    }
    const user = await Supabase.select("users", {
      filter: [{
        column: "username",
        operator: "eq",
        value: username
      }, {
        column: "password",
        operator: "eq",
        value: password
      }]
    });
    if (user.length !== 1) {
      setFailed(true);
      return ;
    }
    state.logged_user_id = user[0].id;
    router.push("/");
  }

  return (
    <ph.PageParamsProvider
      params={useRouter()?.query}
      query={useRouter()?.query}
    >
      <PlasmicLogin 
        failed={failed} 
        username={{
          value: username,
          onChange: (e) => setUser(e.target.value)
        }}
        password={{
          value: password,
          onChange: (e) => setPassword(e.target.value)
        }}
        signin={{
          onClick: onSignin
        }}
      /> 
    </ph.PageParamsProvider>
  );
}

export default Login;
