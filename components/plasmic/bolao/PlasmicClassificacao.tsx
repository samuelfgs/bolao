// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: r6sSLbmSTeVjqGUVythgwH
// Component: -XSVHb6IkX
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: qQe6YhWQiQ/component
import { Fetcher } from "../../../pages/plasmic-host"; // plasmic-import: 7dFnQyHCpn/codeComponent
import { TableWrapper } from "@plasmicpkgs/antd/skinny/registerTable"; // plasmic-import: kWbJIG4IgB/codeComponent
import { TableColumn } from "@plasmicpkgs/antd/skinny/registerTable"; // plasmic-import: qJFaUEuzy9Ae/codeComponent
import { TableValue } from "@plasmicpkgs/antd/skinny/registerTable"; // plasmic-import: aOob39p1-Dlv/codeComponent
import { TableWrapper as TableWrapper2 } from "@plasmicpkgs/antd/skinny/registerTable"; // plasmic-import: LF24IrAPbeRN/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_bolao.module.css"; // plasmic-import: r6sSLbmSTeVjqGUVythgwH/projectcss
import sty from "./PlasmicClassificacao.module.css"; // plasmic-import: -XSVHb6IkX/css

export type PlasmicClassificacao__VariantMembers = {};

export type PlasmicClassificacao__VariantsArgs = {};
type VariantPropType = keyof PlasmicClassificacao__VariantsArgs;
export const PlasmicClassificacao__VariantProps = new Array<VariantPropType>();

export type PlasmicClassificacao__ArgsType = {};
type ArgPropType = keyof PlasmicClassificacao__ArgsType;
export const PlasmicClassificacao__ArgProps = new Array<ArgPropType>();

export type PlasmicClassificacao__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  fetcher?: p.Flex<typeof Fetcher>;
  text?: p.Flex<"div">;
};

export interface DefaultClassificacaoProps {}

function PlasmicClassificacao__RenderFunc(props: {
  variants: PlasmicClassificacao__VariantsArgs;
  args: PlasmicClassificacao__ArgsType;
  overrides: PlasmicClassificacao__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__awWsN)}>
              <Header
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames("__wab_instance", sty.header)}
              />
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__sQ3Hg)}
            >
              <Fetcher
                data-plasmic-name={"fetcher"}
                data-plasmic-override={overrides.fetcher}
                className={classNames("__wab_instance", sty.fetcher)}
                endpoint={"standings" as const}
                name={"standings" as const}
              >
                <ph.DataCtxReader>
                  {$ctx =>
                    (
                      (() => {
                        try {
                          return $ctx.standings.data;
                        } catch (e) {
                          if (e instanceof TypeError) {
                            return [];
                          }
                          throw e;
                        }
                      })() ?? []
                    ).map((currentGroup, currentIndex) => (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ve4M9
                        )}
                        key={currentIndex}
                      >
                        <div
                          data-plasmic-name={"text"}
                          data-plasmic-override={overrides.text}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text
                          )}
                        >
                          {(() => {
                            try {
                              return `Grupo ${currentGroup.group}`;
                            } catch (e) {
                              if (e instanceof TypeError) {
                                return "Enter some text";
                              }
                              throw e;
                            }
                          })()}
                        </div>

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__tbKd
                            )}
                          >
                            <TableWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.antdTable__hkNV
                              )}
                              columns={
                                <React.Fragment>
                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__vzLvt
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__ivurL
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue__lZ4Fj
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"pos" as const}
                                    title={"#" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn___3Ffef
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <p.Stack
                                            as={"div"}
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__g6VMq
                                            )}
                                          >
                                            <p.PlasmicImg
                                              alt={""}
                                              className={classNames(
                                                sty.img__sXkHh
                                              )}
                                              displayHeight={"25px" as const}
                                              displayMaxHeight={"none" as const}
                                              displayMaxWidth={"100%" as const}
                                              displayMinHeight={"0" as const}
                                              displayMinWidth={"0" as const}
                                              displayWidth={"25px" as const}
                                              loading={"lazy" as const}
                                              src={(() => {
                                                try {
                                                  return $ctx.currentRow.flag;
                                                } catch (e) {
                                                  if (e instanceof TypeError) {
                                                    return undefined;
                                                  }
                                                  throw e;
                                                }
                                              })()}
                                            />

                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue__p5Rrl
                                              )}
                                            />
                                          </p.Stack>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"name" as const}
                                    title={"Seleção" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__rn23N
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__rv4Xb
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue__uPcT
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"matches" as const}
                                    title={"J" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__zZoNq
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__qhene
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue__gwaAh
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"wins" as const}
                                    title={"V" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__dDw5O
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox___9DH3O
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue__y9WU
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"ties" as const}
                                    title={"E" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__erdWf
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__i6R28
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue__sBu1S
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"losses" as const}
                                    title={"D" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__rmZSq
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__vwi7X
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue___7G0Rk
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"ga" as const}
                                    title={"GP" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__x6Gi3
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__uZseM
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue__dcrFj
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"ga" as const}
                                    title={"GC" as const}
                                  />

                                  <TableColumn
                                    className={classNames(
                                      "__wab_instance",
                                      sty.antdTableColumn__aMsMy
                                    )}
                                    columnTemplate={
                                      <ph.DataCtxReader>
                                        {$ctx => (
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              sty.freeBox__ilzjl
                                            )}
                                          >
                                            <TableValue
                                              className={classNames(
                                                "__wab_instance",
                                                sty.antdTableValue___21DZm
                                              )}
                                            />
                                          </div>
                                        )}
                                      </ph.DataCtxReader>
                                    }
                                    dataIndex={"gdf" as const}
                                    title={"SG" as const}
                                  />
                                </React.Fragment>
                              }
                              items={(() => {
                                try {
                                  return currentGroup.teams.map((team, i) => ({
                                    pos: i + 1,
                                    name: team.name_en,
                                    matches: team.mp,
                                    pts: team.pts,
                                    wins: team.w,
                                    losses: team.l,
                                    ties: team.mp - team.w - team.l,
                                    gf: team.gf,
                                    ga: team.ga,
                                    gdf: team.gf - team.ga,
                                    flag: team.flag
                                  }));
                                } catch (e) {
                                  if (e instanceof TypeError) {
                                    return [
                                      {
                                        name: "John Brown",
                                        age: 19,
                                        address: "New York No. 1 Lake Park",
                                        tags: ["student", "developer"]
                                      },
                                      {
                                        name: "Jim Green",
                                        age: 42,
                                        address: "London No. 1 Lake Park",
                                        tags: ["teacher"]
                                      },
                                      {
                                        name: "Joe Black",
                                        age: 32,
                                        address: "Sidney No. 1 Lake Park",
                                        tags: ["cool", "teacher"]
                                      }
                                    ];
                                  }
                                  throw e;
                                }
                              })()}
                              pagination={false}
                              scroll={{ x: true }}
                            />

                            <TableColumn
                              className={classNames(
                                "__wab_instance",
                                sty.antdTableColumn__abDa7
                              )}
                              columnTemplate={
                                <ph.DataCtxReader>
                                  {$ctx => (
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.freeBox__ph4Fx
                                      )}
                                    >
                                      <TableValue
                                        className={classNames(
                                          "__wab_instance",
                                          sty.antdTableValue__s2DZt
                                        )}
                                      />
                                    </div>
                                  )}
                                </ph.DataCtxReader>
                              }
                              dataIndex={"gdf" as const}
                              title={"SG" as const}
                            />

                            {true ? (
                              <TableWrapper2
                                className={classNames(
                                  "__wab_instance",
                                  sty.antdTable__uojX
                                )}
                                columns={
                                  <React.Fragment>
                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn__cjtq8
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__rxrY8
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue__rg5Yr
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"pos" as const}
                                      title={"#" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn__wdCem
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <p.Stack
                                              as={"div"}
                                              hasGap={true}
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__kP6It
                                              )}
                                            >
                                              <p.PlasmicImg
                                                alt={""}
                                                className={classNames(
                                                  sty.img__lu28P
                                                )}
                                                displayHeight={"25px" as const}
                                                displayMaxHeight={
                                                  "none" as const
                                                }
                                                displayMaxWidth={
                                                  "100%" as const
                                                }
                                                displayMinHeight={"0" as const}
                                                displayMinWidth={"0" as const}
                                                displayWidth={"25px" as const}
                                                loading={"lazy" as const}
                                                src={(() => {
                                                  try {
                                                    return $ctx.currentRow.flag;
                                                  } catch (e) {
                                                    if (
                                                      e instanceof TypeError
                                                    ) {
                                                      return undefined;
                                                    }
                                                    throw e;
                                                  }
                                                })()}
                                              />

                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue__o1S8G
                                                )}
                                              />
                                            </p.Stack>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"name" as const}
                                      title={"Seleção" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn___4K9HN
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__iWpCw
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue__mylFv
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"matches" as const}
                                      title={"J" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn___54Vx5
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__vuR8U
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue___6B9I9
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"wins" as const}
                                      title={"V" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn__yXB
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__wV1Qy
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue___3DGht
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"ties" as const}
                                      title={"E" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn__s8E1D
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__vJEgI
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue__mBzlY
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"losses" as const}
                                      title={"D" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn__tKkLn
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__yVfcR
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue__qfGHx
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"ga" as const}
                                      title={"GP" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn__r3Lur
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__npRPb
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue__mlflG
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"ga" as const}
                                      title={"GC" as const}
                                    />

                                    <TableColumn
                                      className={classNames(
                                        "__wab_instance",
                                        sty.antdTableColumn__h1UV
                                      )}
                                      columnTemplate={
                                        <ph.DataCtxReader>
                                          {$ctx => (
                                            <div
                                              className={classNames(
                                                projectcss.all,
                                                sty.freeBox__nVg2K
                                              )}
                                            >
                                              <TableValue
                                                className={classNames(
                                                  "__wab_instance",
                                                  sty.antdTableValue__bLnv
                                                )}
                                              />
                                            </div>
                                          )}
                                        </ph.DataCtxReader>
                                      }
                                      dataIndex={"gdf" as const}
                                      title={"SG" as const}
                                    />
                                  </React.Fragment>
                                }
                                items={currentGroup.teams.map((team, i) => ({
                                  pos: i + 1,
                                  name: team.name_en,
                                  matches: team.mp,
                                  pts: team.pts,
                                  wins: team.w,
                                  losses: team.l,
                                  ties: team.mp - team.w - team.l,
                                  gf: team.gf,
                                  ga: team.ga,
                                  gdf: team.gf - team.ga,
                                  flag: team.flag
                                }))}
                                pagination={false}
                                scroll={(...args) => {
                                  const $steps = {};
                                  $steps["temp name"] = true
                                    ? (({ customFunction }) => {
                                        return customFunction();
                                      }).apply(null, [
                                        {
                                          customFunction: (() => ({
                                            x: true
                                          }))()
                                        }
                                      ])
                                    : undefined;
                                }}
                                size={"large" as const}
                              />
                            ) : null}
                          </div>
                        ) : null}
                      </div>
                    ))
                  }
                </ph.DataCtxReader>
              </Fetcher>
            </p.Stack>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "fetcher", "text"],
  header: ["header"],
  fetcher: ["fetcher", "text"],
  text: ["text"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  fetcher: typeof Fetcher;
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicClassificacao__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicClassificacao__VariantsArgs;
    args?: PlasmicClassificacao__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicClassificacao__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicClassificacao__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicClassificacao__ArgProps,
          internalVariantPropNames: PlasmicClassificacao__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicClassificacao__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicClassificacao";
  } else {
    func.displayName = `PlasmicClassificacao.${nodeName}`;
  }
  return func;
}

export const PlasmicClassificacao = Object.assign(
  // Top-level PlasmicClassificacao renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    fetcher: makeNodeComponent("fetcher"),
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicClassificacao
    internalVariantProps: PlasmicClassificacao__VariantProps,
    internalArgProps: PlasmicClassificacao__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicClassificacao;
/* prettier-ignore-end */
