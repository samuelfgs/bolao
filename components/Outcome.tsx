// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicOutcome,
  DefaultOutcomeProps
} from "./plasmic/bolao/PlasmicOutcome";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import { state, ViewResults } from "../state-management/app";
import { useSnapshot } from "valtio";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface OutcomeProps extends Omit<DefaultOutcomeProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultOutcomeProps altogether and have
// total control over the props for your component.
export interface OutcomeProps extends DefaultOutcomeProps {}

function Outcome_(props: OutcomeProps, ref: HTMLElementRefOf<"div">) {
  const viewCtx = React.useContext(ViewResults);
  const snap = useSnapshot(state);
  const match = viewCtx
    ? viewCtx.find(match => match.match_id === props.matchId)
    : state.matches.find(match => match.match_id === props.matchId);
  let result: "zero" | "one" | "three" = "zero";
  if (match && match.away_score !== null && match.home_score !== null) {
    const betDiff = (match.away_score ?? 0) - (match.home_score ?? 0);
    const betAway = match.away_score ?? 0;
    const matchDiff = +(props.awayScore ?? 0) - +(props.homeScore ?? 0);
    const matchAway = +(props.awayScore ?? 0);
    console.log("dale", betDiff, betAway, matchDiff, matchAway);
    if (betDiff === matchDiff && betAway === matchAway) {
      result = "three";
    } else if (betDiff * matchDiff > 0 || (betDiff === 0 && matchDiff === 0)) {
      result = "one";
    }
  }
  return <PlasmicOutcome root={{ ref }} {...props} result={result} />;
}

const Outcome = React.forwardRef(Outcome_);
export default Outcome;
